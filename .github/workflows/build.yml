# This is a basic workflow to help you get started with Actions

name: Build docker image

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
      - develop
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - master
      - develop

env:
  DOCKER_REGISTRY: "docker.io"
  DOCKER_IMAGE_NAME: "docker.io/document_filling_tool"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: ${{ env.DOCKER_IMAGE_NAME }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}
            type=sha
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - uses: actions-ecosystem/action-regex-match@v2
        id: regex-match
        with:
          text: ${{ github.ref_name }}
          regex: '^v[0-9]+.[0-9]+.[0-9]+$'
      - name: Login to Docker Registry
        uses: docker/login-action@v2
        if: ${{ steps.regex-match.outputs.match != '' }}
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
      - name: Build docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          push: ${{ steps.regex-match.outputs.match != '' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            MODE="$MODE"
            DB_CONNECTION="${{ secrets.DB_CONNECTION }}"
        env:
          MODE: ${{ steps.regex-match.outputs.match != '' && 'PROD' ||  'Test'  }}